{"ast":null,"code":"var _jsxFileName = \"/Users/Cate/Desktop/creativeproject-491368-486527/src/Game.js\";\nimport React from \"react\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst options = {\n  method: 'GET',\n  headers: {\n    'X-RapidAPI-Host': 'ajayakv-rest-countries-v1.p.rapidapi.com',\n    'X-RapidAPI-Key': '89b4ac1ff2msh6ebcf573e6f8f2cp10ed27jsn4d728932bc60'\n  }\n};\nexport const getStaticProps = async () => {\n  const response = await fetch('https://ajayakv-rest-countries-v1.p.rapidapi.com/rest/v1/all', options);\n  const data = await respone.json();\n  return {\n    props: {\n      countries: data\n    }\n  }; // .then(response => response.json())\n  // .then(response => console.log(response))\n  // .catch(err => console.error(err));\n};\n\nconst Game = ({\n  countries\n}) => {\n  // const [data, setData] = useState(null)\n  // const [isLoading, setLoading] = useState(false)\n  // useEffect(() => {\n  //   setLoading(true)\n  //   fetch('api/profile-data')\n  //     .then((res) => res.json())\n  //     .then((data) => {\n  //       setData(data)\n  //       setLoading(false)\n  //     })\n  // }, [])\n  // if (isLoading) return <p>Loading...</p>\n  // if (!data) return <p>No profile data</p>\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"gameplay\",\n    children: /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Play the game\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 9\n  }, this);\n};\n\n_c = Game;\nexport default Game; // https://github.com/lennertVanSever/graphcountries\n\nvar _c;\n\n$RefreshReg$(_c, \"Game\");","map":{"version":3,"sources":["/Users/Cate/Desktop/creativeproject-491368-486527/src/Game.js"],"names":["React","useState","options","method","headers","getStaticProps","response","fetch","data","respone","json","props","countries","Game"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,OAAzB;;AAEA,MAAMC,OAAO,GAAG;AACfC,EAAAA,MAAM,EAAE,KADO;AAEfC,EAAAA,OAAO,EAAE;AACR,uBAAmB,0CADX;AAER,sBAAkB;AAFV;AAFM,CAAhB;AAWA,OAAO,MAAMC,cAAc,GAAG,YAAY;AACtC,QAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,8DAAD,EAAiEL,OAAjE,CAA5B;AACA,QAAMM,IAAI,GAAG,MAAMC,OAAO,CAACC,IAAR,EAAnB;AAEA,SAAO;AACHC,IAAAA,KAAK,EAAE;AAACC,MAAAA,SAAS,EAAEJ;AAAZ;AADJ,GAAP,CAJsC,CAOzC;AACA;AACA;AACA,CAVM;;AAYP,MAAMK,IAAI,GAAG,CAAC;AAACD,EAAAA;AAAD,CAAD,KAAiB;AAE1B;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAGA,sBACI;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA,2BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAQH,CA3BD;;KAAMC,I;AA6BN,eAAeA,IAAf,C,CAEA","sourcesContent":["import React from \"react\";\nimport { useState } from \"react\";\n\nconst options = {\n\tmethod: 'GET',\n\theaders: {\n\t\t'X-RapidAPI-Host': 'ajayakv-rest-countries-v1.p.rapidapi.com',\n\t\t'X-RapidAPI-Key': '89b4ac1ff2msh6ebcf573e6f8f2cp10ed27jsn4d728932bc60'\n\t}\n};\n\n\n\n\nexport const getStaticProps = async () => {\n    const response = await fetch('https://ajayakv-rest-countries-v1.p.rapidapi.com/rest/v1/all', options);\n    const data = await respone.json();\n\n    return {\n        props: {countries: data}\n    }\n\t// .then(response => response.json())\n\t// .then(response => console.log(response))\n\t// .catch(err => console.error(err));\n}\n\nconst Game = ({countries}) => {\n\n    // const [data, setData] = useState(null)\n    // const [isLoading, setLoading] = useState(false)\n  \n    // useEffect(() => {\n    //   setLoading(true)\n    //   fetch('api/profile-data')\n    //     .then((res) => res.json())\n    //     .then((data) => {\n    //       setData(data)\n    //       setLoading(false)\n    //     })\n    // }, [])\n  \n    // if (isLoading) return <p>Loading...</p>\n    // if (!data) return <p>No profile data</p>\n\n    \n    return(\n        <div className=\"gameplay\">\n            <h1>Play the game</h1>\n            {}\n\n\n        </div>\n    );\n};\n\nexport default Game;\n\n// https://github.com/lennertVanSever/graphcountries"]},"metadata":{},"sourceType":"module"}