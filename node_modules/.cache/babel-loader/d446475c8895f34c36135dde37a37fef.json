{"ast":null,"code":"var _jsxFileName = \"/Users/Cate/Desktop/creativeproject-491368-486527/src/Game.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst options = {\n  method: 'GET',\n  headers: {\n    'X-RapidAPI-Host': 'ajayakv-rest-countries-v1.p.rapidapi.com',\n    'X-RapidAPI-Key': '89b4ac1ff2msh6ebcf573e6f8f2cp10ed27jsn4d728932bc60'\n  }\n};\nfetch('https://ajayakv-rest-countries-v1.p.rapidapi.com/rest/v1/all', options).then(response => response.json()).then(response => console.log(response)).catch(err => console.error(err));\nexport const getStaticProps = async () => {\n  const response = await fetch();\n};\n\nconst Game = () => {\n  _s();\n\n  const [data, setData] = useState(null);\n  const [isLoading, setLoading] = useState(false);\n  useEffect(() => {\n    setLoading(true);\n    fetch('api/profile-data').then(res => res.json()).then(data => {\n      setData(data);\n      setLoading(false);\n    });\n  }, []);\n  if (isLoading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 27\n  }, this);\n  if (!data) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"No profile data\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 23\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"gameplay\",\n    children: /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Play the game\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Game, \"YJka7g7FkKqEfFVhCypLPmREhdE=\");\n\n_c = Game;\nexport default Game; // https://github.com/lennertVanSever/graphcountries\n\nvar _c;\n\n$RefreshReg$(_c, \"Game\");","map":{"version":3,"sources":["/Users/Cate/Desktop/creativeproject-491368-486527/src/Game.js"],"names":["React","useState","options","method","headers","fetch","then","response","json","console","log","catch","err","error","getStaticProps","Game","data","setData","isLoading","setLoading","useEffect","res"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,OAAzB;;AAEA,MAAMC,OAAO,GAAG;AACfC,EAAAA,MAAM,EAAE,KADO;AAEfC,EAAAA,OAAO,EAAE;AACR,uBAAmB,0CADX;AAER,sBAAkB;AAFV;AAFM,CAAhB;AAQAC,KAAK,CAAC,8DAAD,EAAiEH,OAAjE,CAAL,CACEI,IADF,CACOC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADnB,EAEEF,IAFF,CAEOC,QAAQ,IAAIE,OAAO,CAACC,GAAR,CAAYH,QAAZ,CAFnB,EAGEI,KAHF,CAGQC,GAAG,IAAIH,OAAO,CAACI,KAAR,CAAcD,GAAd,CAHf;AAMA,OAAO,MAAME,cAAc,GAAG,YAAY;AACtC,QAAMP,QAAQ,GAAG,MAAMF,KAAK,EAA5B;AACH,CAFM;;AAIP,MAAMU,IAAI,GAAG,MAAM;AAAA;;AAEf,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBhB,QAAQ,CAAC,IAAD,CAAhC;AACA,QAAM,CAACiB,SAAD,EAAYC,UAAZ,IAA0BlB,QAAQ,CAAC,KAAD,CAAxC;AAEAmB,EAAAA,SAAS,CAAC,MAAM;AACdD,IAAAA,UAAU,CAAC,IAAD,CAAV;AACAd,IAAAA,KAAK,CAAC,kBAAD,CAAL,CACGC,IADH,CACSe,GAAD,IAASA,GAAG,CAACb,IAAJ,EADjB,EAEGF,IAFH,CAESU,IAAD,IAAU;AACdC,MAAAA,OAAO,CAACD,IAAD,CAAP;AACAG,MAAAA,UAAU,CAAC,KAAD,CAAV;AACD,KALH;AAMD,GARQ,EAQN,EARM,CAAT;AAUA,MAAID,SAAJ,EAAe,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACf,MAAI,CAACF,IAAL,EAAW,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AAGX,sBACI;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA,2BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAOH,CA1BD;;GAAMD,I;;KAAAA,I;AA4BN,eAAeA,IAAf,C,CAEA","sourcesContent":["import React from \"react\";\nimport { useState } from \"react\";\n\nconst options = {\n\tmethod: 'GET',\n\theaders: {\n\t\t'X-RapidAPI-Host': 'ajayakv-rest-countries-v1.p.rapidapi.com',\n\t\t'X-RapidAPI-Key': '89b4ac1ff2msh6ebcf573e6f8f2cp10ed27jsn4d728932bc60'\n\t}\n};\n\nfetch('https://ajayakv-rest-countries-v1.p.rapidapi.com/rest/v1/all', options)\n\t.then(response => response.json())\n\t.then(response => console.log(response))\n\t.catch(err => console.error(err));\n    \n\nexport const getStaticProps = async () => {\n    const response = await fetch()\n}\n\nconst Game = () => {\n\n    const [data, setData] = useState(null)\n    const [isLoading, setLoading] = useState(false)\n  \n    useEffect(() => {\n      setLoading(true)\n      fetch('api/profile-data')\n        .then((res) => res.json())\n        .then((data) => {\n          setData(data)\n          setLoading(false)\n        })\n    }, [])\n  \n    if (isLoading) return <p>Loading...</p>\n    if (!data) return <p>No profile data</p>\n\n\n    return(\n        <div className=\"gameplay\">\n            <h1>Play the game</h1>\n\n\n        </div>\n    );\n};\n\nexport default Game;\n\n// https://github.com/lennertVanSever/graphcountries"]},"metadata":{},"sourceType":"module"}